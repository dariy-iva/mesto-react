{"version":3,"sources":["utils/Api.js","utils/constants.js","contexts/CurrentUserContext.js","images/logo.svg","components/Header/Header.js","components/Card/Card.js","components/Main/Main.js","components/Footer/Footer.js","components/PopupWithForm/PopupWithForm.js","components/ImagePopup/ImagePopup.js","components/App.js","reportWebVitals.js","index.js"],"names":["api","objConfig","this","_token","token","_id","id","_adress","adress","res","ok","json","Promise","reject","status","fetch","headers","authorization","then","_verifyResolve","data","method","body","JSON","stringify","name","about","avatar","mesto","link","postId","isLiked","CurrentUserContext","React","createContext","Header","className","href","src","logo","alt","Card","card","onCardClick","onCardLike","onCardDelete","owner","likes","currentUser","useContext","isOwn","buttonDeleteClassName","some","i","buttonLikeClassName","onClick","type","length","Main","props","onEditAvatar","onEditProfile","onAddPost","useState","posts","setPosts","handleCardLike","changeLikePostStatus","newPost","state","map","c","handleCardDelete","deletePost","filter","useEffect","getPosts","catch","err","console","log","post","Footer","PopupWithForm","title","children","isOpen","onClose","popupClass","formClass","ImagePopup","App","setCurrentUser","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPostPopupOpen","setIsAddPostPopupOpen","isEditAvatarPopupOpenen","setIsEditAvatarPopupOpen","selectedCard","setSelectedCard","closeAllPopups","getUserInfo","Provider","value","placeholder","required","minLength","maxLength","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a7f94912.chunk.js","sourcesContent":["import { apiConfig } from \"./constants\";\r\n\r\nclass Api {\r\n  constructor(objConfig) {\r\n    this._token = objConfig.token;\r\n    this._id = objConfig.id;\r\n    this._adress = objConfig.adress;\r\n  }\r\n\r\n  _verifyResolve(res) {\r\n    if (res.ok) {\r\n      return res.json();\r\n    }\r\n    return Promise.reject(res.status);\r\n  }\r\n\r\n  getUserInfo() {\r\n    return fetch(`${this._adress}/v1/${this._id}/users/me`, {\r\n      headers: {\r\n        authorization: this._token\r\n      }\r\n    }).then(this._verifyResolve);\r\n  }\r\n\r\n  getPosts() {\r\n    return fetch(`${this._adress}/v1/${this._id}/cards`, {\r\n      headers: {\r\n        authorization: this._token\r\n      }\r\n    }).then(this._verifyResolve);\r\n  }\r\n\r\n  setUserInfo(data) {\r\n    return fetch(`${this._adress}/v1/${this._id}/users/me`, {\r\n      method: \"PATCH\",\r\n      headers: {\r\n        authorization: this._token,\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify({\r\n        name: data.name,\r\n        about: data.about\r\n      })\r\n    }).then(this._verifyResolve);\r\n  }\r\n\r\n  setUserAvatar(data) {\r\n    return fetch(`${this._adress}/v1/${this._id}/users/me/avatar`, {\r\n      method: \"PATCH\",\r\n      headers: {\r\n        authorization: this._token,\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify({\r\n        avatar: data.avatar\r\n      })\r\n    }).then(this._verifyResolve);\r\n  }\r\n\r\n  setPost(data) {\r\n    return fetch(`${this._adress}/v1/${this._id}/cards`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        authorization: this._token,\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify({\r\n        name: data.mesto,\r\n        link: data.link\r\n      })\r\n    }).then(this._verifyResolve);\r\n  }\r\n\r\n  deletePost(postId) {\r\n    return fetch(`${this._adress}/v1/${this._id}/cards/${postId}`, {\r\n      method: \"DELETE\",\r\n      headers: {\r\n        authorization: this._token\r\n      }\r\n    }).then(this._verifyResolve);\r\n  }\r\n\r\n  changeLikePostStatus(postId, isLiked) {\r\n    return fetch(\r\n      `${this._adress}/v1/${this._id}/cards/likes/${postId}`,\r\n      {\r\n        method: isLiked ? \"DELETE\" : \"PUT\",\r\n        headers: {\r\n          authorization: this._token\r\n        }\r\n      }\r\n    ).then(this._verifyResolve);\r\n  }\r\n}\r\n\r\nexport const api = new Api(apiConfig);\r\n","export const apiConfig = {\r\n  token: \"036b7b31-eb11-4936-b88e-e4dfd598930e\",\r\n  id: \"cohort-28\",\r\n  adress: \"https://mesto.nomoreparties.co\"\r\n};\r\n","import React from \"react\";\r\n\r\nexport const CurrentUserContext = React.createContext();","export default __webpack_public_path__ + \"static/media/logo.bbe2a6ea.svg\";","import React from \"react\";\r\nimport logo from \"../../images/logo.svg\";\r\n\r\nexport default function Header() {\r\n  return (\r\n    <header className=\"header\">\r\n      <a href=\"/\">\r\n        <img src={logo} alt=\"логотип\" className=\"header__logo link-hover\" />\r\n      </a>\r\n    </header>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { CurrentUserContext } from \"../../contexts/CurrentUserContext\";\r\n\r\nexport default function Card({ card, onCardClick, onCardLike, onCardDelete }) {\r\n  const { owner, link, name, likes } = card;\r\n\r\n  const currentUser = React.useContext(CurrentUserContext);\r\n  const isOwn = owner._id === currentUser._id;\r\n  const buttonDeleteClassName = `post__del-button ${\r\n    isOwn && \"post__del-button_visible\"\r\n  }`;\r\n\r\n  const isLiked = likes.some((i) => i._id === currentUser._id);\r\n  const buttonLikeClassName = `post__like-button ${\r\n    isLiked && \"post__like-button_active\"\r\n  }`;\r\n\r\n  function handleImgClick() {\r\n    onCardClick(card);\r\n  }\r\n\r\n  function handleLikeClick() {\r\n    onCardLike(card);\r\n  }\r\n\r\n  function handleDeleteClick() {\r\n    onCardDelete(card);\r\n  }\r\n\r\n  return (\r\n    <article className=\"post\">\r\n      <img\r\n        src={link}\r\n        alt={name}\r\n        className=\"post__photo\"\r\n        onClick={handleImgClick}\r\n      />\r\n      <p className=\"post__caption\">{name}</p>\r\n      <div className=\"post__likes\">\r\n        <button type=\"button\" className={buttonLikeClassName} onClick={handleLikeClick}></button>\r\n        <p className=\"post__likes-number\">{likes.length}</p>\r\n      </div>\r\n      <button type=\"button\" className={buttonDeleteClassName} onClick={handleDeleteClick}></button>\r\n    </article>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { api } from \"../../utils/Api\";\r\nimport { CurrentUserContext } from \"../../contexts/CurrentUserContext\";\r\nimport Card from \"../Card/Card\";\r\n\r\nexport default function Main(props) {\r\n  const currentUser = React.useContext(CurrentUserContext);\r\n  const { onEditAvatar, onEditProfile, onAddPost, onCardClick } = props;\r\n  const [posts, setPosts] = React.useState([]);\r\n\r\n  React.useEffect(() => {\r\n    api\r\n      .getPosts()\r\n      .then((data) => {\r\n        setPosts(data);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }, []);\r\n\r\n  function handleCardLike(card) {\r\n    const isLiked = card.likes.some((i) => i._id === currentUser._id);\r\n    api.changeLikePostStatus(card._id, isLiked).then((newPost) => {\r\n      setPosts((state) => state.map((c) => (c._id === card._id ? newPost : c)));\r\n    });\r\n  }\r\n\r\n  function handleCardDelete(card) {\r\n    api.deletePost(card._id).then(() => {\r\n      setPosts((state) => state.filter((c) => (c._id !== card._id)));\r\n    });\r\n  }\r\n\r\n  return (\r\n    <main className=\"content\">\r\n      <section className=\"profile\">\r\n        <img\r\n          src={currentUser.avatar || \"\"}\r\n          alt=\"аватар\"\r\n          className=\"profile__avatar\"\r\n        />\r\n        <div className=\"profile__edit-avatar\" onClick={onEditAvatar}></div>\r\n        <div className=\"profile__info\">\r\n          <h1 className=\"profile__name\">\r\n            {currentUser.name || \"Пользователь не найден\"}\r\n          </h1>\r\n          <p className=\"profile__about-me\">\r\n            {currentUser.about || \"Пользователь не найден\"}\r\n          </p>\r\n          <button\r\n            className=\"profile__edit-button\"\r\n            type=\"button\"\r\n            onClick={onEditProfile}\r\n          ></button>\r\n        </div>\r\n        <button\r\n          className=\"profile__add-button\"\r\n          type=\"button\"\r\n          onClick={onAddPost}\r\n        ></button>\r\n      </section>\r\n      <section className=\"posts\">\r\n        {posts.map((post) => (\r\n          <Card\r\n            card={post}\r\n            onCardClick={onCardClick}\r\n            onCardLike={handleCardLike}\r\n            onCardDelete={handleCardDelete}\r\n            key={post._id}\r\n          />\r\n        ))}\r\n      </section>\r\n    </main>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function Footer() {\r\n  return (\r\n    <footer className=\"footer\">\r\n      <p className=\"footer__author\">&copy;&nbsp;2021 Daria Ivanova</p>\r\n    </footer>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function PopupWithForm({ name, title, children, isOpen, onClose }) {\r\n  const popupClass = `popup ${isOpen && \"popup_opened\"}`;\r\n  const formClass = `popup__form popup__form_contain_${name}`;\r\n  return (\r\n    <div className={popupClass}>\r\n      <div className=\"popup__container\">\r\n        <h2 className=\"popup__title\">{title}</h2>\r\n        <form name={name} className={formClass}>\r\n          {children}\r\n          <button type=\"submit\" className=\"popup__submit-button\">\r\n            Сохранить\r\n          </button>\r\n          <button\r\n            type=\"reset\"\r\n            className=\"popup__reset-button\"\r\n            onClick={onClose}\r\n          ></button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function ImagePopup(props) {\r\n  const {card, onClose} = props;\r\n  return (\r\n    <div\r\n      className={`popup popup_content_photo ${card && \"popup_opened\"}`}\r\n      id=\"popup-open-photo\"\r\n    >\r\n      <div className=\"popup__photo-box\">\r\n        <img\r\n          src={card ? card.link : \"#\"}\r\n          alt={card ? card.name : \"\"}\r\n          className=\"popup__photo\"\r\n        />\r\n        <p className=\"popup__caption-photo\">\r\n          {card ? card.name : \"\"}\r\n        </p>\r\n        <button\r\n          type=\"button\"\r\n          className=\"popup__reset-button\"\r\n          onClick={onClose}\r\n        ></button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { api } from \"../utils/Api\";\r\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\r\nimport Header from \"./Header/Header\";\r\nimport Main from \"./Main/Main\";\r\nimport Footer from \"./Footer/Footer\";\r\nimport PopupWithForm from \"./PopupWithForm/PopupWithForm\";\r\nimport ImagePopup from \"./ImagePopup/ImagePopup\";\r\n\r\nexport default function App() {\r\n  const [currentUser, setCurrentUser] = React.useState({});\r\n\r\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] =\r\n    React.useState(false);\r\n  const [isAddPostPopupOpen, setIsAddPostPopupOpen] = React.useState(false);\r\n  const [isEditAvatarPopupOpenen, setIsEditAvatarPopupOpen] =\r\n    React.useState(false);\r\n  const [selectedCard, setSelectedCard] = React.useState(null);\r\n\r\n  React.useEffect(() => {\r\n    api\r\n      .getUserInfo()\r\n      .then((data) => {\r\n        setCurrentUser(data);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }, []);\r\n\r\n  function handleEditAvatarClick() {\r\n    setIsEditAvatarPopupOpen(true);\r\n  }\r\n\r\n  function handleEditProfileClick() {\r\n    setIsEditProfilePopupOpen(true);\r\n  }\r\n\r\n  function handleAddPostClick() {\r\n    setIsAddPostPopupOpen(true);\r\n  }\r\n\r\n  function handleCardClick(card) {\r\n    setSelectedCard(card);\r\n  }\r\n\r\n  function closeAllPopups() {\r\n    setIsEditAvatarPopupOpen(false);\r\n    setIsEditProfilePopupOpen(false);\r\n    setIsAddPostPopupOpen(false);\r\n    setSelectedCard(null);\r\n  }\r\n\r\n  return (\r\n    <CurrentUserContext.Provider value={currentUser}>\r\n      <div className=\"page\">\r\n        <Header />\r\n        <Main\r\n          onEditAvatar={handleEditAvatarClick}\r\n          onEditProfile={handleEditProfileClick}\r\n          onAddPost={handleAddPostClick}\r\n          onCardClick={handleCardClick}\r\n        />\r\n        <Footer />\r\n        <PopupWithForm\r\n          name=\"edit-profile\"\r\n          title=\"Редактировать профиль\"\r\n          isOpen={isEditProfilePopupOpen}\r\n          onClose={closeAllPopups}\r\n        >\r\n          <fieldset className=\"popup__fieldset\">\r\n            <label className=\"popup__field\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"popup__input popup__input_content_name\"\r\n                placeholder=\"Имя\"\r\n                name=\"name\"\r\n                required\r\n                minLength=\"2\"\r\n                maxLength=\"40\"\r\n                id=\"name-input\"\r\n              />\r\n              <span className=\"popup__error name-input-error\"></span>\r\n            </label>\r\n            <label className=\"popup__field\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"popup__input\"\r\n                placeholder=\"Профессиональная деятельность\"\r\n                id=\"about-me-input\"\r\n                name=\"about\"\r\n                required\r\n                minLength=\"2\"\r\n                maxLength=\"200\"\r\n              />\r\n              <span className=\"popup__error about-me-input-error\"></span>\r\n            </label>\r\n          </fieldset>\r\n        </PopupWithForm>\r\n        <PopupWithForm\r\n          name=\"add-post\"\r\n          title=\"Новое место\"\r\n          isOpen={isAddPostPopupOpen}\r\n          onClose={closeAllPopups}\r\n        >\r\n          <fieldset className=\"popup__fieldset\">\r\n            <label className=\"popup__field\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"popup__input\"\r\n                placeholder=\"Название\"\r\n                id=\"place-input\"\r\n                name=\"mesto\"\r\n                required\r\n                minLength=\"2\"\r\n                maxLength=\"30\"\r\n              />\r\n              <span className=\"popup__error place-input-error\"></span>\r\n            </label>\r\n            <label className=\"popup__field\">\r\n              <input\r\n                type=\"url\"\r\n                className=\"popup__input\"\r\n                placeholder=\"Ссылка на картинку\"\r\n                id=\"link-input\"\r\n                name=\"link\"\r\n                required\r\n              />\r\n              <span className=\"popup__error link-input-error\"></span>\r\n            </label>\r\n          </fieldset>\r\n        </PopupWithForm>\r\n        <PopupWithForm name=\"delete-post\" title=\"Вы уверены?\" />\r\n        <PopupWithForm\r\n          name=\"edit-avatar\"\r\n          title=\"Обновить аватар\"\r\n          isOpen={isEditAvatarPopupOpenen}\r\n          onClose={closeAllPopups}\r\n        >\r\n          <fieldset className=\"popup__fieldset\">\r\n            <label className=\"popup__field\">\r\n              <input\r\n                type=\"url\"\r\n                className=\"popup__input\"\r\n                placeholder=\"Ссылка на аватар\"\r\n                id=\"avatar-input\"\r\n                name=\"avatar\"\r\n                required\r\n              />\r\n              <span className=\"popup__error avatar-input-error\"></span>\r\n            </label>\r\n          </fieldset>\r\n        </PopupWithForm>\r\n        <ImagePopup card={selectedCard} onClose={closeAllPopups} />\r\n      </div>\r\n    </CurrentUserContext.Provider>\r\n  );\r\n}\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}